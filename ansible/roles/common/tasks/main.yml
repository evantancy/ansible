---
- name: Install some common apt packages
  become: true
  become_method: sudo
  apt:
    name: "{{ item }}"
    state: latest
  loop:
    - git
    - terminator
    - vim
    - net-tools
    - gcc
    - wget
    - curl
    - tlp
    - htop
    - python
    - python-dev
    - python-pip
    - python3
    - python3-dev
    - python3-pip
    - build-essential
    - "linux-headers-{{ os_kernel }}"
    - xz-utils
    - python-setuptools
    - libboost-python-dev
    - libboost-thread-dev
    - tree

- name: Uninstall update-notifier apt packages, and unattended-upgrades
  become: true
  become_method: sudo
  apt:
    name: "{{ item }}"
    state: absent
  loop:
    - update-notifier
    - update-notifier-common
    - unattended-upgrades

- name: Add apt repo for git
  become: true
  become_method: sudo
  apt_repository:
    repo: "{{ ppa_git }}"
    state: present
    update_cache: true
  notify:
    - post_add_apt_handler
    - apt_update
    - apt_upgrade

- meta: flush_handlers

- name: Ensure Git is upgraded
  apt:
    name: git
    state: latest
  register: upgrade_git_status
  until: upgrade_git_status is success
  delay: 1
  retries: 3

- name: Upgrade python3 pip
  pip:
    name: pip
    executable: pip3
    extra_args: --upgrade

- name: Upgrade python2 pip
  pip:
    name: pip
    executable: pip2
    extra_args: --upgrade

- name: Adding nano settings
  blockinfile:
    path: "{{ home_dir }}/.nanorc"
    marker: "# {mark} USER SETTINGS - ANSIBLE MANAGED BLOCK"
    block: |
      set tabsize 4
      set tabstospaces
      set softwrap
    create: yes

- name: Adding time stamps to bash history
  blockinfile:
    path: "{{ home_dir }}/.bashrc"
    marker: "# {mark} USER BASH SETTINGS - ANSIBLE MANAGED BLOCK"
    block: |
      HISTTIMEFORMAT="%d/%m/%y %T "

- name: Enabling ttyUSB* and ttyS* permissions
  become: true
  become_method: sudo
  blockinfile:
    path: "/etc/udev/rules.d/60-extra-acl.rules"
    marker: "# {mark} USER PERMISSION SETTINGS - ANSIBLE MANAGED BLOCK"
    block: |
      KERNEL=="ttyUSB[0-9]*", TAG+="udev-acl", TAG+="uaccess"
      KERNEL=="ttyS[0-30]*", TAG+="udev-acl", TAG+="uaccess"
    create: yes

- name: "Creating installation directory at {{ install_dir }}"
  file:
    path: "{{ install_dir }}"
    state: directory
