---
- name: Install some common apt packages
  become: true
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - git
    - snapd
    - byobu
    - blueman
    - vim
    - neovim
    - net-tools
    - gcc
    - wget
    - curl
    - tlp
    - htop
    - tree
    - software-properties-common
    - build-essential
    - "linux-headers-{{ os_kernel }}"
    - xz-utils
    - python3
    - python3-dev
    - python-setuptools
    - libboost-python-dev
    - libboost-thread-dev


- name: Install node version manager (nvm)
  shell: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash

- name: Install nodejs
  shell: nvm install node

- name: Uninstall update-notifier apt packages, and unattended-upgrades
  become: true
  apt:
    name: "{{ item }}"
    state: absent
  loop:
    - update-notifier
    - update-notifier-common
    - unattended-upgrades

- name: Regex-ing certain lines in .bashrc
  replace:
    path: "{{ home_dir }}/.bashrc"
    regexp: "HISTCONTROL=ignoredup*"
    replace: "HISTCONTROL=ignoredups:erasedups"

- name: Adding custom .bashrc settings
  blockinfile:
    path: "{{ home_dir }}/.bashrc"
    marker: "# {mark} USER BASH SETTINGS - ANSIBLE MANAGED BLOCK"
    block: |
      HISTTIMEFORMAT="%D @ %T "
      export PATH=$PATH:~/bin:~/.local/bin

      # write Bash history across multiple shells
      export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"

      # max depth = 2 for dirs in terminal
      export PROMPT_DIRTRIM=2

- name: Copy ansible/files/.bash_aliases to ~/.bash_aliases
  copy:
    src: files/.bash_aliases
    dest: ~/.bash_aliases

- name: "Creating installation directory at {{ install_dir }}"
  file:
    path: "{{ install_dir }}"
    state: directory

- name: Create bin directory at ~/bin
  file:
    path: ~/bin
    state: directory

- name: Placing some scripts in ~/bin
  copy:
    src: files/scripts/*.sh
    dest: ~/bin

- name: Configure bluetooth
  become: True
  replace:
    path: "/lib/systemd/system/bluetooth.service"
    regexp: "ExecStart=/usr/lib/bluetooth/bluetoothd*"
    replace: "ExecStart=/usr/lib/bluetooth/bluetoothd --noplugin=avrcp"

- name: Restart bluetooth service
  service:
    name: bluetooth.service
    state: reloaded
